{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Thorndale{\*\falt Times New Roman};}{\f5\fswiss\fprq2\fcharset0 Albany{\*\falt Arial};}{\f6\fswiss\fprq0\fcharset0 FreeSans;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033 Normal;}
{\s1\sbasedon18\snext19\sb240\sa283\keepn\b\afs44\ab\loch\f4\fs48 Heading 1;}
{\*\cs15\snext15 Endnote Characters;}
{\*\cs16\snext16 Footnote Characters;}
{\*\cs17\snext17\cf2\ul\ulc0 Internet Link;}
{\s18\sbasedon0\snext19\sb240\sa283\keepn\afs26\loch\f5\fs28 Heading;}
{\s19\sbasedon0\snext19\sl288\slmult1\sb0\sa144 Text Body;}
{\s20\sbasedon19\snext20\sl288\slmult1\sb0\sa144\dbch\af6 List;}
{\s21\sbasedon0\snext21\sb120\sa120\noline\i\dbch\af6\afs24\ai\fs24 Caption;}
{\s22\sbasedon0\snext22\noline\dbch\af6 Index;}
{\s23\sbasedon0\snext19\sb0\sa283\brdrb\brdrdb\brdrw7\brdrcf3\brsp0\fs12 Horizontal Line;}
{\s24\sbasedon0\snext24\i Sender;}
{\s25\sbasedon19\snext25\sl288\slmult1\sb0\sa144 Table Contents;}
{\s26\sbasedon0\snext26\tqc\tx4818\tqr\tx9637\noline Footer;}
{\s27\sbasedon0\snext27\tqc\tx4818\tqr\tx9637\noline Header;}
}{\*\generator LibreOffice/4.4.2.2$Linux_x86 LibreOffice_project/40m0$Build-2}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}}\deftab709
\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}
{\pgdsc1\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt1 Endnote;}
{\pgdsc2\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt2 HTML;}}
\formshade{\*\pgdscno2}\paperh16838\paperw11906\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\lang255
{\*\atnid }{\*\atnauthor }\chatn{\*\annotation{\*\atndate 121310363}HTML: <meta name="created" content="00:00:00">}}{\rtlch \ltrch\lang255
{\*\atnid }{\*\atnauthor }\chatn{\*\annotation{\*\atndate 121310363}HTML: <meta name="changed" content="2015-11-01T18:20:18.265040775">}}{\rtlch \ltrch\loch\lang255
Git es un sistema de control de versiones. Permite que un grupo de personas trabajen con los mismos archivos (generalmente codigo fuente), sin que se interrumpan entre si.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
<Ver como instalar Git>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Dentro del directorio en el que vamos a colocar los documentos, ejecutamos el siguiente comando para indicar que queremos que Git vigile su contenido con el fin de gestionar los cambios:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git init}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Dentro del directorio Git crea un directorio oculto /.git/ que es el repositorio en el que guardar\u225\'e1 los archivos y la configuracion adem\u225\'e1s de los archivos de operaci\u243\'f3n de Git para realizar el control de cambios.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Para ver el estado actual del repositorio de nuestro proyecto ejecutamos el siguiente comando, siempre dentro del directorio en el que hemos iniciado Git:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git status}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Es recomendado ejecutar git status cada vez que queramos ver los cambios que hemos realizado o cuando no estemos seguros de los cambios que se han ejecutado y que est\u225\'e1n pendientes de ser aplicados al repositorio.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Los archivos nuevos van a ser identificados por Git con el estatus "untracked". Para indicar a Git que queremos incluir un archivo nuevo al sistema de control de versiones, ejecutamos el siguiente comando:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git add <nombre del archivo>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git add "*.txt"}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git add .}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Los archivos que no son nuevos pero que han sido cambiados y cuyos cambios no se han sometido a la lista de cambios que ser\u225\'e1n aplicados al repositorio aparecen con estatus "unstaged". Los archivos cuyos cambios han sido sometidos pero aun no se han aplicado aparecen como "staged".}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Los que se han eliminado del directorio del proyecto y que est\u225\'e1n pendientes de ser removido del repositorio aparecen como "deleted".}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Cuando indicamos a git que queremos que un archivo sea incluido al area "staging" con git add lo que hace es agregarlo en un espacio donde coloca todos los archivos que est\u225\'e1n en espera de ser sometidos al repositorio, por lo tanto, los archivos que aparecen en "Changes to be committed" aun no est\u225\'e1n en el repositorio.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Podemos agregar y remover archivos del staging area antes de enviarlos definitivamente al repositorio.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Con el siguiente comando, sometemos los archivos al repositorio. Cada commit crea una instantanea del repositorio y git podr\u225\'e1 mostrarnos las actualizaciones realizadas en el tiempo.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Git commit -m "descripcion de los cambios"}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Con el siguiente comando podemos ver todos los cambios en el orden en que lo aplicamos:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git log}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
El siguiente comando asocia el repositorio local que hemos creado con un repositorio remoto en Github }
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git remote add origin <url>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
El nombre origin es elnombre tipico de un repositorio remoto, pero podemos utilizar el nombre que nos plazca.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Para enviar nuestro repositorio local al repositorio remoto nombrado origin, utilizamos el siguiente comando:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git push -u origin master}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
-u dice a git que recuerde los nombres de los repositorios local y remoto, de manera que la proxima vez solo ejecutamos git push.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Nuestro repositorio es tratado por Github como un branch del repositorio origin. El nombre que por defecto Github utiliza para identificar nuestro repositorio local es "master".}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Los usuarios que invitamos a trabajar con nuestro repositorio remoto deben ejecutar un pull. Con el tiempo, nosotros tenemos tambien que ejecutar un pull para que nuestro repositorio local refleje los cambios que los dem\u225\'e1s usuarios han realizado:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git pull origin master}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Para ver los cambios con respecto a nuestro ultimo commit, utilizamos:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git diff HEAD}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
diff tambien se puede utilizar para ver las diferencias entre nuestro ultimo commit y los archivos que tenemos en el area staging (que hemos agregado con git add)}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git diff \u8211\'96staged}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
El siguiente comando remueve un archivo del area staging, y no sera incluido en el commit}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git reset <nombre del archivo>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
El siguiente comando elimina totalmente el archivo}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git chechout -- <nombre del archivo>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Tenemos un branch de origin llamado master. Podemos crear otras copias tipo branch de manera que varios usuarios pueden trabajar independientemente y luego se puede hacer un merge al master.}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Git branch <nombre>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
El nuevo branch, igual que master, es un repositorio local, de origin. ?????}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Para cambiar entre un branch y otro , utilizamos:}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git checkout <nombre del branch>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Si queremos aplicar el repositorio slave al master utilizamos}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git checkuout master}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git merge slave}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
Para borrar un branch, utlizamos}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0{\rtlch \ltrch\loch\lang255
git branch -d <nombre>}
\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s19\sl288\slmult1\sb0\sa144\sl240\slmult1\sb0\sa0\rtlch \ltrch\loch

\par }